version: "3.9"
services:
  db:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbit:
    image: rabbitmq:3.13-management
    container_name: rabbit
    ports:
      - "5672:5672"   # conexiones apps
      - "15672:15672" # consola web
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  clientes:
    build: ./clientes-service
    container_name: clientes-service
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/test?currentSchema=clientes
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_SCHEMAS: clientes
      SPRING_FLYWAY_DEFAULT_SCHEMA: clientes
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8081
    ports:
      - "8081:8081"

  cuentas:
    build: ./cuentas-service
    container_name: cuentas-service
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/test?currentSchema=cuentas
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_SCHEMAS: cuentas
      SPRING_FLYWAY_DEFAULT_SCHEMA: cuentas
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
