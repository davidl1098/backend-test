version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U test -d test"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbit:
    image: rabbitmq:3.13-management
    ports: ["5672:5672", "15672:15672"]

  clientes:
    build: ./clientes-service
    depends_on:
      db: { condition: service_healthy }
      rabbit: { condition: service_started }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/test?currentSchema=clientes
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_SCHEMAS: clientes
      SPRING_FLYWAY_DEFAULT_SCHEMA: clientes
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8081
    ports: ["8081:8081"]

  cuentas:
    build: ./cuentas-service
    depends_on:
      db: { condition: service_healthy }
      rabbit: { condition: service_started }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/test?currentSchema=cuentas
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_SCHEMAS: cuentas
      SPRING_FLYWAY_DEFAULT_SCHEMA: cuentas
      SPRING_RABBITMQ_HOST: rabbit
      SPRING_RABBITMQ_PORT: 5672
      SERVER_PORT: 8082
    ports: ["8082:8082"]
